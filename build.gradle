plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'house.inksoftware'
version '23.0.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()

    maven {
        url "https://packages.confluent.io/maven"
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'system test framework'
                packaging = 'jar'
                description = 'A application used as an example on how to set up pushing its components to the Central Repository.'
                url = 'https://inksoftware.house/'

                scm {
                    connection = 'scm:git:https://github.com/INK-Solutions/system-test-framework.git'
                    developerConnection = 'scm:git:https://github.com/INK-Solutions/system-test-framework.git'
                    url = 'https://github.com/INK-Solutions/system-test-framework.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'Ivan Nikolaichuk'
                        name = 'Ivan Nikolaichuk'
                        email = 'hello@inksoftware.house'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = 'ivan.inksoftware'
                password = 'mXsYrMGXQ0CGQF7tsd5M%'
            }
        }
    }
}

signing {
    sign configurations.archives
    sign publishing.publications.mavenJava
}

dependencies {
    implementation 'com.guicedee.services:sl4j:1.0.13.5'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'com.github.spullara.mustache.java:compiler:0.9.10'
    implementation 'org.skyscreamer:jsonassert:1.5.1'
    implementation 'com.jayway.jsonpath:json-path:2.7.0'
    implementation 'org.springframework:spring-test:6.0.11'
    implementation 'org.springframework:spring-web:6.0.11'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.4'
    implementation 'commons-io:commons-io:2.12.0'

    implementation 'org.apache.kafka:kafka-clients:3.2.3'
    implementation 'tech.allegro.schema.json2avro:converter:0.2.15'
    implementation "io.confluent:kafka-streams-avro-serde:7.2.1"
    implementation 'org.apache.avro:avro:1.11.1'
    implementation 'org.springframework.kafka:spring-kafka:2.8.9'


    implementation 'org.springframework.kafka:spring-kafka-test:2.9.1'

    implementation "org.testcontainers:mssqlserver:1.17.3"
    implementation 'org.testcontainers:postgresql:1.17.3'

    implementation 'org.testcontainers:kafka:1.17.3'
    implementation 'org.testcontainers:mockserver:1.19.0'

    implementation 'org.awaitility:awaitility:4.2.0'
    implementation 'org.awaitility:awaitility-proxy:3.1.6'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-test:3.1.3'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}
